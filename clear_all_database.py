#!/usr/bin/env python
"""
–ú–æ—â–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""
import os
import django

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shoplist.settings')
django.setup()

from django.db import connection
from django.contrib.auth import get_user_model

User = get_user_model()

def clear_all_database():
    """–ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("üßπ –ù–∞—á–∏–Ω–∞–µ–º –ü–û–õ–ù–£–Æ –æ—á–∏—Å—Ç–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    with connection.cursor() as cursor:
        # –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–Ω–µ—à–Ω–∏—Ö –∫–ª—é—á–µ–π
        cursor.execute("SET session_replication_role = replica;")
        
        # –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
        tables_to_clear = [
            'products_productcharacteristic',
            'products_productimage', 
            'products_product_translation',
            'products_product_tags',
            'products_product',
            'products_category_translation',
            'products_category',
            'products_seller',
            'products_shop_translation',
            'products_shop',
            'products_tag_translation',
            'products_tag',
            'products_review',
            'products_orderitem',
            'products_order',
            'products_cartitem',
            'products_cart',
            'products_commission',
            'products_promocode',
            'products_notification',
            'products_userlocation',
            'products_location',
            'products_page_translation',
            'products_page',
            'products_pagecategory_translation',
            'products_pagecategory',
        ]
        
        for table in tables_to_clear:
            try:
                cursor.execute(f"TRUNCATE TABLE {table} RESTART IDENTITY CASCADE;")
                print(f"‚úÖ –û—á–∏—â–µ–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞: {table}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ {table}: {e}")
        
        # –û—á–∏—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∫—Ä–æ–º–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
        try:
            cursor.execute("DELETE FROM products_user WHERE is_superuser = FALSE;")
            print("‚úÖ –û—á–∏—â–µ–Ω—ã –æ–±—ã—á–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
        
        # –í–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–Ω–µ—à–Ω–∏—Ö –∫–ª—é—á–µ–π
        cursor.execute("SET session_replication_role = DEFAULT;")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
        cursor.execute("SELECT COUNT(*) FROM products_product")
        product_count = cursor.fetchone()[0]
        
        cursor.execute("SELECT COUNT(*) FROM products_category")
        category_count = cursor.fetchone()[0]
        
        cursor.execute("SELECT COUNT(*) FROM products_seller")
        seller_count = cursor.fetchone()[0]
        
        cursor.execute("SELECT COUNT(*) FROM products_user")
        user_count = cursor.fetchone()[0]
        
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å–ª–µ –ü–û–õ–ù–û–ô –æ—á–∏—Å—Ç–∫–∏:")
        print(f"  - –¢–æ–≤–∞—Ä—ã: {product_count}")
        print(f"  - –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: {category_count}")
        print(f"  - –ü—Ä–æ–¥–∞–≤—Ü—ã: {seller_count}")
        print(f"  - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {user_count}")
        
        print("\nüéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ü–û–õ–ù–û–°–¢–¨–Æ –æ—á–∏—â–µ–Ω–∞!")

if __name__ == '__main__':
    clear_all_database()

