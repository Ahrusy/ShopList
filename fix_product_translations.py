#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤
"""
import os
import sys
import django
from faker import Faker

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shoplist.settings')
django.setup()

from products.models import Product

fake = Faker('ru_RU')

def fix_translations():
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤"""
    products = Product.objects.all()
    fixed_count = 0
    
    print(f"–ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {products.count()}")
    
    for product in products:
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–µ—Ä–µ–≤–æ–¥
            try:
                name = product.name
                if not name or name.strip() == '':
                    raise Exception("No translation")
            except:
                # –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥
                product.set_current_language('ru')
                product.name = f"–¢–æ–≤–∞—Ä {product.id}"
                product.description = f"–û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ {product.id}. –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä –¥–ª—è –≤–∞—à–∏—Ö –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π."
                product.save()
                fixed_count += 1
                
                if fixed_count % 100 == 0:
                    print(f"–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {fixed_count}")
                    
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞ {product.id}: {e}")
            continue
    
    return fixed_count

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤...")
    
    fixed_count = fix_translations()
    
    print(f"\n‚úÖ –ì–æ—Ç–æ–≤–æ! –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {fixed_count}")

if __name__ == '__main__':
    main()
