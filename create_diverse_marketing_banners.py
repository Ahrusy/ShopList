#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã—Ö –±–∞–Ω–Ω–µ—Ä–æ–≤ —Å —Ä–∞–∑–Ω—ã–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ —Ç–æ–≤–∞—Ä–æ–≤
"""

import os
import sys
import django
import shutil
from django.core.files.base import ContentFile

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shoplist.settings')
django.setup()

from products.models import Banner, Product, ProductImage

def create_diverse_marketing_banners():
    """–°–æ–∑–¥–∞–µ—Ç —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ –±–∞–Ω–Ω–µ—Ä—ã —Å —Ä–∞–∑–Ω—ã–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ —Ç–æ–≤–∞—Ä–æ–≤"""
    print("üéØ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã—Ö –±–∞–Ω–Ω–µ—Ä–æ–≤ —Å —Ä–∞–∑–Ω—ã–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ —Ç–æ–≤–∞—Ä–æ–≤...")
    
    # –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –±–∞–Ω–Ω–µ—Ä—ã
    Banner.objects.all().delete()
    print("üóëÔ∏è  –£–¥–∞–ª–µ–Ω—ã —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –±–∞–Ω–Ω–µ—Ä—ã")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
    products_with_images = list(Product.objects.filter(
        images__isnull=False,
        is_active=True
    ).prefetch_related('images').distinct())
    
    print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(products_with_images)} —Ç–æ–≤–∞—Ä–æ–≤ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏")
    
    # –°–æ–∑–¥–∞–µ–º –±–∞–Ω–Ω–µ—Ä—ã —Å —Ä–∞–∑–Ω—ã–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
    banners_data = [
        {
            'title': 'üî• –ú–ï–ì–ê –†–ê–°–ü–†–û–î–ê–ñ–ê –°–ú–ê–†–¢–§–û–ù–û–í',
            'subtitle': 'iPhone, Samsung, Xiaomi —Å–æ —Å–∫–∏–¥–∫–æ–π –¥–æ 70%!',
            'banner_type': 'main',
            'link': '/ru/categories/electronics/',
            'sort_order': 1
        },
        {
            'title': 'üíé –ü–†–ï–ú–ò–£–ú –ß–ê–°–´ ROLEX',
            'subtitle': '–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –º–æ–¥–µ–ª–∏. –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è.',
            'banner_type': 'main',
            'link': '/ru/categories/premium/',
            'sort_order': 2
        },
        {
            'title': 'üè† –°–û–í–†–ï–ú–ï–ù–ù–ê–Ø –ö–£–•–ù–Ø',
            'subtitle': '–í—Å—è —Ç–µ—Ö–Ω–∏–∫–∞ –¥–ª—è –∏–¥–µ–∞–ª—å–Ω–æ–π –∫—É—Ö–Ω–∏ –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ',
            'banner_type': 'main',
            'link': '/ru/categories/home-garden/',
            'sort_order': 3
        },
        {
            'title': 'üë∂ –î–ï–¢–°–ö–ò–ï –ò–ì–†–£–®–ö–ò',
            'subtitle': '–ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∏ —Ä–∞–∑–≤–∏–≤–∞—é—â–∏–µ –∏–≥—Ä—É—à–∫–∏ –¥–ª—è –¥–µ—Ç–µ–π',
            'banner_type': 'footer',
            'link': '/ru/categories/kids/',
            'sort_order': 1
        },
        {
            'title': 'üíÑ –ö–†–ê–°–û–¢–ê –ò –ó–î–û–†–û–í–¨–ï',
            'subtitle': '–ö–æ—Å–º–µ—Ç–∏–∫–∞, –ø–∞—Ä—Ñ—é–º–µ—Ä–∏—è, —Å—Ä–µ–¥—Å—Ç–≤–∞ –¥–ª—è —É—Ö–æ–¥–∞',
            'banner_type': 'footer',
            'link': '/ru/categories/beauty/',
            'sort_order': 2
        },
        {
            'title': 'üèÉ‚Äç‚ôÇÔ∏è –°–ü–û–†–¢–ò–í–ù–ê–Ø –û–î–ï–ñ–î–ê',
            'subtitle': 'Nike, Adidas, Puma - –≤—Å–µ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –æ–±—Ä–∞–∑–∞ –∂–∏–∑–Ω–∏',
            'banner_type': 'footer',
            'link': '/ru/categories/sports/',
            'sort_order': 3
        },
        {
            'title': 'üíª –ù–û–£–¢–ë–£–ö–ò –ò –ü–ö',
            'subtitle': 'ASUS, Apple, Dell - –º–æ—â–Ω—ã–µ –∫–æ–º–ø—å—é—Ç–µ—Ä—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã –∏ –∏–≥—Ä',
            'banner_type': 'sidebar',
            'link': '/ru/categories/technology/',
            'sort_order': 1
        },
        {
            'title': 'üëó –ú–û–î–ù–ê–Ø –û–î–ï–ñ–î–ê',
            'subtitle': 'Zara, H&M, Uniqlo - –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã —Å–µ–∑–æ–Ω–∞',
            'banner_type': 'sidebar',
            'link': '/ru/categories/fashion/',
            'sort_order': 2
        }
    ]
    
    created_count = 0
    used_products = set()  # –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
    
    for i, banner_data in enumerate(banners_data):
        try:
            # –í—ã–±–∏—Ä–∞–µ–º —Ç–æ–≤–∞—Ä, –∫–æ—Ç–æ—Ä—ã–π –µ—â–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è
            suitable_product = None
            for product in products_with_images:
                if product.id not in used_products:
                    suitable_product = product
                    used_products.add(product.id)
                    break
            
            # –ï—Å–ª–∏ –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã, –Ω–∞—á–∏–Ω–∞–µ–º –∑–∞–Ω–æ–≤–æ
            if not suitable_product and products_with_images:
                suitable_product = products_with_images[i % len(products_with_images)]
            
            if not suitable_product:
                print(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –¥–ª—è –±–∞–Ω–Ω–µ—Ä–∞: {banner_data['title']}")
                continue
            
            # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
            product_image = suitable_product.images.first()
            if not product_image:
                print(f"‚ùå –£ —Ç–æ–≤–∞—Ä–∞ {suitable_product.name} –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
                continue
            
            # –°–æ–∑–¥–∞–µ–º –±–∞–Ω–Ω–µ—Ä
            banner = Banner.objects.create(
                title=banner_data['title'],
                subtitle=banner_data['subtitle'],
                banner_type=banner_data['banner_type'],
                link=banner_data['link'],
                sort_order=banner_data['sort_order'],
                is_active=True
            )
            
            # –ö–æ–ø–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
            if product_image.image:
                # –ß–∏—Ç–∞–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                with open(product_image.image.path, 'rb') as f:
                    image_content = ContentFile(f.read())
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±–∞–Ω–Ω–µ—Ä–∞
                banner.image.save(
                    f"marketing_banner_{banner.id}.jpg",
                    image_content,
                    save=True
                )
                
                print(f"‚úÖ –°–æ–∑–¥–∞–Ω –±–∞–Ω–Ω–µ—Ä: {banner.title}")
                print(f"   –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: {suitable_product.name}")
                created_count += 1
            else:
                print(f"‚ùå –£ —Ç–æ–≤–∞—Ä–∞ {suitable_product.name} –Ω–µ—Ç —Ñ–∞–π–ª–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")
                banner.delete()
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±–∞–Ω–Ω–µ—Ä–∞ '{banner_data['title']}': {e}")
            import traceback
            traceback.print_exc()
    
    print(f"\nüéâ –°–æ–∑–¥–∞–Ω–æ {created_count} –±–∞–Ω–Ω–µ—Ä–æ–≤ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ —Ç–æ–≤–∞—Ä–æ–≤")
    print(f"üìä –í—Å–µ–≥–æ –±–∞–Ω–Ω–µ—Ä–æ–≤ –≤ –±–∞–∑–µ: {Banner.objects.count()}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –±–∞–Ω–Ω–µ—Ä—ã
    print("\nüìã –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±–∞–Ω–Ω–µ—Ä–æ–≤:")
    for banner in Banner.objects.all().order_by('sort_order'):
        print(f"  - {banner.title} ({banner.banner_type}) - {'–ê–∫—Ç–∏–≤–µ–Ω' if banner.is_active else '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}")
        print(f"    –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫: {banner.subtitle}")
        print(f"    –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {'–ï—Å—Ç—å' if banner.image else '–ù–µ—Ç'}")

if __name__ == '__main__':
    create_diverse_marketing_banners()









