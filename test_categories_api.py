#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API –∫–∞—Ç–µ–≥–æ—Ä–∏–π
"""
import requests
import json

def test_categories_api():
    base_url = "http://127.0.0.1:8000"
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –∫–∞—Ç–µ–≥–æ—Ä–∏–π...")
    
    # –¢–µ—Å—Ç 1: –û—Å–Ω–æ–≤–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    print("\n1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...")
    try:
        response = requests.get(f"{base_url}/api/mega-menu/categories/")
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ! –ü–æ–ª—É—á–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {len(data.get('categories', []))}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            for i, cat in enumerate(data.get('categories', [])[:3]):
                print(f"   - {cat['name']} (ID: {cat['id']}, Slug: {cat['slug']})")
                
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            print(response.text)
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    # –¢–µ—Å—Ç 2: –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–µ—Ä–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    print("\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏...")
    try:
        # –ü–æ–ª—É—á–∞–µ–º ID –ø–µ—Ä–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        response = requests.get(f"{base_url}/api/mega-menu/categories/")
        if response.status_code == 200:
            data = response.json()
            if data.get('categories'):
                first_cat_id = data['categories'][0]['id']
                
                # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                response = requests.get(f"{base_url}/api/mega-menu/categories/{first_cat_id}/subcategories/")
                print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
                
                if response.status_code == 200:
                    subcat_data = response.json()
                    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ! –ü–æ–ª—É—á–µ–Ω–æ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π: {len(subcat_data.get('subcategories', []))}")
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                    for i, subcat in enumerate(subcat_data.get('subcategories', [])[:3]):
                        print(f"   - {subcat['name']} (ID: {subcat['id']}, Level: {subcat.get('level', 'N/A')})")
                        
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
                    print(response.text)
            else:
                print("‚ùå –ù–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
                
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    # –¢–µ—Å—Ç 3: –ü–æ–∏—Å–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    print("\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π...")
    try:
        response = requests.get(f"{base_url}/api/categories/search/?q=—ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞")
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            search_data = response.json()
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ! –ù–∞–π–¥–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {len(search_data.get('categories', []))}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞
            for cat in search_data.get('categories', [])[:3]:
                print(f"   - {cat['name']} (Path: {cat.get('path', 'N/A')})")
                
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            print(response.text)
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    print("\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_categories_api()