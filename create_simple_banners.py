#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Å—Ç—ã—Ö –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö –±–∞–Ω–Ω–µ—Ä–æ–≤
"""

import os
import sys
import django
from PIL import Image, ImageDraw, ImageFont
from io import BytesIO
from django.core.files.base import ContentFile

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shoplist.settings')
django.setup()

from products.models import Banner

def create_simple_banner_image(title, subtitle, width=400, height=200, bg_color=(255, 107, 107)):
    """–°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ—Å—Ç–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±–∞–Ω–Ω–µ—Ä–∞"""
    # –°–æ–∑–¥–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    img = Image.new('RGB', (width, height), bg_color)
    draw = ImageDraw.Draw(img)
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —à—Ä–∏—Ñ—Ç
    try:
        title_font = ImageFont.load_default()
        subtitle_font = ImageFont.load_default()
    except:
        title_font = None
        subtitle_font = None
    
    # –†–∏—Å—É–µ–º —Ç–µ–∫—Å—Ç
    text_color = (255, 255, 255)
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    draw.text((20, 50), title, fill=text_color, font=title_font)
    # –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫
    draw.text((20, 100), subtitle, fill=text_color, font=subtitle_font)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ BytesIO
    img_io = BytesIO()
    img.save(img_io, format='JPEG', quality=85)
    img_io.seek(0)
    
    return ContentFile(img_io.getvalue())

def create_simple_banners():
    """–°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ—Å—Ç—ã–µ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ –±–∞–Ω–Ω–µ—Ä—ã"""
    print("üéØ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç—ã—Ö –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö –±–∞–Ω–Ω–µ—Ä–æ–≤...")
    
    # –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –±–∞–Ω–Ω–µ—Ä—ã
    Banner.objects.all().delete()
    print("üóëÔ∏è  –£–¥–∞–ª–µ–Ω—ã —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –±–∞–Ω–Ω–µ—Ä—ã")
    
    # –°–ø–∏—Å–æ–∫ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö –±–∞–Ω–Ω–µ—Ä–æ–≤
    banners_data = [
        {
            'title': 'üî• –ú–ï–ì–ê –†–ê–°–ü–†–û–î–ê–ñ–ê',
            'subtitle': '–°–∫–∏–¥–∫–∏ –¥–æ 80% –Ω–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫—É',
            'banner_type': 'main',
            'bg_color': (220, 38, 127),
            'link': '/ru/categories/electronics/',
            'sort_order': 1
        },
        {
            'title': 'üíé –ü–†–ï–ú–ò–£–ú –ö–û–õ–õ–ï–ö–¶–ò–Ø',
            'subtitle': '–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –æ—Ç –±—Ä–µ–Ω–¥–æ–≤',
            'banner_type': 'main',
            'bg_color': (59, 130, 246),
            'link': '/ru/categories/premium/',
            'sort_order': 2
        },
        {
            'title': 'üè† –î–õ–Ø –î–û–ú–ê –ò –°–ê–î–ê',
            'subtitle': '–í—Å–µ –¥–ª—è —É—é—Ç–∞ –∏ –∫–æ–º—Ñ–æ—Ä—Ç–∞',
            'banner_type': 'main',
            'bg_color': (34, 197, 94),
            'link': '/ru/categories/home-garden/',
            'sort_order': 3
        },
        {
            'title': 'üë∂ –î–ï–¢–°–ö–ò–ô –ú–ò–†',
            'subtitle': '–ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –¥–ª—è –¥–µ—Ç–µ–π',
            'banner_type': 'footer',
            'bg_color': (251, 191, 36),
            'link': '/ru/categories/kids/',
            'sort_order': 1
        },
        {
            'title': 'üíÑ –ö–†–ê–°–û–¢–ê –ò –ó–î–û–†–û–í–¨–ï',
            'subtitle': '–£—Ö–æ–¥ –∑–∞ —Å–æ–±–æ–π –∏ –∑–¥–æ—Ä–æ–≤—å–µ–º',
            'banner_type': 'footer',
            'bg_color': (236, 72, 153),
            'link': '/ru/categories/beauty/',
            'sort_order': 2
        },
        {
            'title': 'üèÉ‚Äç‚ôÇÔ∏è –°–ü–û–†–¢ –ò –ê–ö–¢–ò–í–ù–û–°–¢–¨',
            'subtitle': '–≠–∫–∏–ø–∏—Ä–æ–≤–∫–∞ –¥–ª—è —Å–ø–æ—Ä—Ç–∞',
            'banner_type': 'footer',
            'bg_color': (16, 185, 129),
            'link': '/ru/categories/sports/',
            'sort_order': 3
        }
    ]
    
    created_count = 0
    
    for banner_data in banners_data:
        try:
            # –°–æ–∑–¥–∞–µ–º –±–∞–Ω–Ω–µ—Ä
            banner = Banner.objects.create(
                title=banner_data['title'],
                subtitle=banner_data['subtitle'],
                banner_type=banner_data['banner_type'],
                link=banner_data['link'],
                sort_order=banner_data['sort_order'],
                is_active=True
            )
            
            # –°–æ–∑–¥–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            width = 400 if banner_data['banner_type'] in ['main'] else 300
            height = 200 if banner_data['banner_type'] in ['main'] else 150
            
            image_content = create_simple_banner_image(
                banner_data['title'],
                banner_data['subtitle'],
                width=width,
                height=height,
                bg_color=banner_data['bg_color']
            )
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            banner.image.save(
                f"simple_banner_{banner.id}.jpg",
                image_content,
                save=True
            )
            
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω –±–∞–Ω–Ω–µ—Ä: {banner.title}")
            created_count += 1
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±–∞–Ω–Ω–µ—Ä–∞ '{banner_data['title']}': {e}")
            import traceback
            traceback.print_exc()
    
    print(f"\nüéâ –°–æ–∑–¥–∞–Ω–æ {created_count} –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö –±–∞–Ω–Ω–µ—Ä–æ–≤")
    print(f"üìä –í—Å–µ–≥–æ –±–∞–Ω–Ω–µ—Ä–æ–≤ –≤ –±–∞–∑–µ: {Banner.objects.count()}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –±–∞–Ω–Ω–µ—Ä—ã
    print("\nüìã –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±–∞–Ω–Ω–µ—Ä–æ–≤:")
    for banner in Banner.objects.all().order_by('sort_order'):
        print(f"  - {banner.title} ({banner.banner_type}) - {'–ê–∫—Ç–∏–≤–µ–Ω' if banner.is_active else '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}")

if __name__ == '__main__':
    create_simple_banners()



