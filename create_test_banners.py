#!/usr/bin/env python
"""
Script to create test banners for the main page
"""
import os
import sys
import django
from django.core.files.base import ContentFile
import random

# Setup Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shoplist.settings')
django.setup()

from products.models import Banner, ProductBanner

def create_test_banners():
    """Create test banners for the main page"""
    
    # Clear existing banners
    Banner.objects.all().delete()
    ProductBanner.objects.all().delete()
    
    print("Creating test banners...")
    
    # Create advertising banners
    banner_data = [
        {
            'title': 'üî• –ú–ï–ì–ê –†–ê–°–ü–†–û–î–ê–ñ–ê –°–ú–ê–†–¢–§–û–ù–û–í',
            'subtitle': '–°–∫–∏–¥–∫–∏ –¥–æ 50% –Ω–∞ –≤—Å–µ –º–æ–¥–µ–ª–∏ iPhone –∏ Samsung',
            'link': '/category/smartfony/',
            'banner_type': 'main',
            'sort_order': 1
        },
        {
            'title': 'üíª –ù–û–£–¢–ë–£–ö–ò –ò –ü–ö',
            'subtitle': '–ú–æ—â–Ω—ã–µ –∫–æ–º–ø—å—é—Ç–µ—Ä—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã –∏ –∏–≥—Ä',
            'link': '/category/kompyutery/',
            'banner_type': 'main',
            'sort_order': 2
        },
        {
            'title': 'üë∂ –î–ï–¢–°–ö–ò–ï –ò–ì–†–£–®–ö–ò',
            'subtitle': '–†–∞–∑–≤–∏–≤–∞—é—â–∏–µ –∏–≥—Ä—É—à–∫–∏ –¥–ª—è –¥–µ—Ç–µ–π –≤—Å–µ—Ö –≤–æ–∑—Ä–∞—Å—Ç–æ–≤',
            'link': '/category/detskie-tovary/',
            'banner_type': 'main',
            'sort_order': 3
        },
        {
            'title': 'üíÑ –ö–†–ê–°–û–¢–ê –ò –ó–î–û–†–û–í–¨–ï',
            'subtitle': '–ö–æ—Å–º–µ—Ç–∏–∫–∞ –∏ —É—Ö–æ–¥–æ–≤—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –ø—Ä–µ–º–∏—É–º –∫–ª–∞—Å—Å–∞',
            'link': '/category/krasota-i-zdorove/',
            'banner_type': 'main',
            'sort_order': 4
        },
        {
            'title': 'üëó –ú–û–î–ù–ê–Ø –û–î–ï–ñ–î–ê',
            'subtitle': '–ù–æ–≤–∏–Ω–∫–∏ —Å–µ–∑–æ–Ω–∞ –æ—Ç –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –±—Ä–µ–Ω–¥–æ–≤',
            'link': '/category/odezhda/',
            'banner_type': 'main',
            'sort_order': 5
        },
        {
            'title': 'üíé –ü–†–ï–ú–ò–£–ú –ß–ê–°–´ ROLEX',
            'subtitle': '–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –º—É–∂—Å–∫–∏—Ö –∏ –∂–µ–Ω—Å–∫–∏—Ö —á–∞—Å–æ–≤',
            'link': '/category/chasy/',
            'banner_type': 'main',
            'sort_order': 6
        },
        {
            'title': 'üè† –°–û–í–†–ï–ú–ï–ù–ù–ê–Ø –ö–£–•–ù–Ø',
            'subtitle': '–¢–µ—Ö–Ω–∏–∫–∞ –∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã –¥–ª—è –∫—É—Ö–Ω–∏',
            'link': '/category/bytovaya-tehnika/',
            'banner_type': 'main',
            'sort_order': 7
        },
        {
            'title': 'üèÉ‚Äç‚ôÇÔ∏è –°–ü–û–†–¢–ò–í–ù–ê–Ø –û–î–ï–ñ–î–ê',
            'subtitle': '–û–¥–µ–∂–¥–∞ –∏ –æ–±—É–≤—å –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –æ–±—Ä–∞–∑–∞ –∂–∏–∑–Ω–∏',
            'link': '/category/sport-i-otdyh/',
            'banner_type': 'main',
            'sort_order': 8
        }
    ]
    
    # Create banners
    for i, data in enumerate(banner_data):
        banner = Banner.objects.create(
            title=data['title'],
            subtitle=data['subtitle'],
            link=data['link'],
            banner_type=data['banner_type'],
            sort_order=data['sort_order'],
            is_active=True
        )
        
        # Create a simple colored image for the banner
        image_content = create_simple_banner_image(f"Banner {i+1}", data['title'])
        banner.image.save(f'banner_{i+1}.png', ContentFile(image_content))
        banner.save()
        
        print(f"Created banner: {banner.title}")
    
    # Create product banners for slider
    product_banner_data = [
        {
            'title': '–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã',
            'subtitle': '–ù–æ–≤–∏–Ω–∫–∏ 2025',
            'description': '–°–∞–º—ã–µ —Å–≤–µ–∂–∏–µ –º–æ–¥–µ–ª–∏ —Å–º–∞—Ä—Ç—Ñ–æ–Ω–æ–≤ –ø–æ –ª—É—á—à–∏–º —Ü–µ–Ω–∞–º',
            'link': '/category/smartfony/',
            'style': 'new',
            'button_text': '–í—ã–±—Ä–∞—Ç—å',
            'background_color': '#FF6B35',
            'text_color': '#FFFFFF',
            'sort_order': 1
        },
        {
            'title': '–ù–æ—É—Ç–±—É–∫–∏',
            'subtitle': '–î–æ -30%',
            'description': '–ú–æ—â–Ω—ã–µ –Ω–æ—É—Ç–±—É–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã –∏ –∏–≥—Ä —Å–æ —Å–∫–∏–¥–∫–æ–π',
            'link': '/category/noutbuki/',
            'style': 'discount',
            'button_text': '–ö—É–ø–∏—Ç—å',
            'background_color': '#005BFF',
            'text_color': '#FFFFFF',
            'sort_order': 2
        },
        {
            'title': '–ß–∞—Å—ã',
            'subtitle': '–ü—Ä–µ–º–∏—É–º',
            'description': '–≠–ª–∏—Ç–Ω—ã–µ —á–∞—Å—ã –æ—Ç –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –±—Ä–µ–Ω–¥–æ–≤',
            'link': '/category/chasy/',
            'style': 'premium',
            'button_text': '–°–º–æ—Ç—Ä–µ—Ç—å',
            'background_color': '#2E7D32',
            'text_color': '#FFFFFF',
            'sort_order': 3
        },
        {
            'title': '–ö–æ—Å–º–µ—Ç–∏–∫–∞',
            'subtitle': '–•–∏—Ç –ø—Ä–æ–¥–∞–∂',
            'description': '–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –ø–æ —É—Ö–æ–¥—É –∑–∞ –∫–æ–∂–µ–π',
            'link': '/category/krasota-i-zdorove/',
            'style': 'popular',
            'button_text': '–í—ã–±—Ä–∞—Ç—å',
            'background_color': '#9C27B0',
            'text_color': '#FFFFFF',
            'sort_order': 4
        },
        {
            'title': '–î–æ—Å—Ç–∞–≤–∫–∞',
            'subtitle': '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ',
            'description': '–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ –æ—Ç 3000 ‚ÇΩ',
            'link': '/delivery/',
            'style': 'delivery',
            'button_text': '–ü–æ–¥—Ä–æ–±–Ω–µ–µ',
            'background_color': '#FFC107',
            'text_color': '#000000',
            'sort_order': 5
        },
        {
            'title': '–†–∞—Å–ø—Ä–æ–¥–∞–∂–∞',
            'subtitle': '–î–æ -70%',
            'description': '–†–∞—Å–ø—Ä–æ–¥–∞–∂–∞ —Ç–æ–≤–∞—Ä–æ–≤ –ø—Ä–æ—à–ª–æ–≥–æ —Å–µ–∑–æ–Ω–∞',
            'link': '/sale/',
            'style': 'sale',
            'button_text': '–°–º–æ—Ç—Ä–µ—Ç—å',
            'background_color': '#F44336',
            'text_color': '#FFFFFF',
            'sort_order': 6
        }
    ]
    
    # Create product banners
    for i, data in enumerate(product_banner_data):
        product_banner = ProductBanner.objects.create(
            title=data['title'],
            subtitle=data['subtitle'],
            description=data['description'],
            link=data['link'],
            style=data['style'],
            button_text=data['button_text'],
            background_color=data['background_color'],
            text_color=data['text_color'],
            sort_order=data['sort_order'],
            is_active=True
        )
        
        # Create a simple colored image for the product banner
        image_content = create_simple_product_banner_image(
            data['title'], 
            data['subtitle'], 
            data['background_color']
        )
        product_banner.image.save(f'product_banner_{i+1}.png', ContentFile(image_content))
        product_banner.save()
        
        print(f"Created product banner: {product_banner.title}")
    
    print(f"\n‚úÖ Created {Banner.objects.count()} advertising banners")
    print(f"‚úÖ Created {ProductBanner.objects.count()} product banners")
    print("üéâ Banners created successfully!")

def create_simple_banner_image(text, title):
    """Create a simple colored image for banner"""
    # Create a simple colored image with text
    import io
    from PIL import Image, ImageDraw, ImageFont
    
    # Create image
    width, height = 800, 320
    image = Image.new('RGB', (width, height), color=(random.randint(0, 255), random.randint(0, 255), random.randint(0, 255)))
    draw = ImageDraw.Draw(image)
    
    # Try to use a font, fallback to default if not available
    try:
        font = ImageFont.truetype("arial.ttf", 24)
        title_font = ImageFont.truetype("arial.ttf", 32)
    except:
        font = ImageFont.load_default()
        title_font = ImageFont.load_default()
    
    # Draw text
    draw.text((50, 50), title, fill=(255, 255, 255), font=title_font)
    draw.text((50, 100), text, fill=(255, 255, 255), font=font)
    
    # Save to bytes
    img_byte_arr = io.BytesIO()
    image.save(img_byte_arr, format='PNG')
    return img_byte_arr.getvalue()

def create_simple_product_banner_image(title, subtitle, bg_color):
    """Create a simple colored image for product banner"""
    import io
    from PIL import Image, ImageDraw, ImageFont
    
    # Create image
    width, height = 400, 300
    # Convert hex color to RGB
    if bg_color.startswith('#'):
        bg_color = tuple(int(bg_color[i:i+2], 16) for i in (1, 3, 5))
    else:
        bg_color = (random.randint(0, 255), random.randint(0, 255), random.randint(0, 255))
    
    image = Image.new('RGB', (width, height), color=bg_color)
    draw = ImageDraw.Draw(image)
    
    # Try to use a font, fallback to default if not available
    try:
        font = ImageFont.truetype("arial.ttf", 20)
        subtitle_font = ImageFont.truetype("arial.ttf", 16)
    except:
        font = ImageFont.load_default()
        subtitle_font = ImageFont.load_default()
    
    # Draw text
    draw.text((20, 20), title, fill=(255, 255, 255), font=font)
    draw.text((20, 60), subtitle, fill=(255, 255, 255), font=subtitle_font)
    
    # Save to bytes
    img_byte_arr = io.BytesIO()
    image.save(img_byte_arr, format='PNG')
    return img_byte_arr.getvalue()

if __name__ == "__main__":
    create_test_banners()