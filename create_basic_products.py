#!/usr/bin/env python
"""
–ë–∞–∑–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
"""
import os
import sys
import django
from decimal import Decimal
import random
from faker import Faker

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shoplist.settings')
django.setup()

from products.models import Product, Category, Shop, Seller, ProductImage, ProductCharacteristic

fake = Faker('ru_RU')

def create_basic_products():
    """–°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤"""
    # –ü–æ–ª—É—á–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –æ–±—ä–µ–∫—Ç—ã
    seller = Seller.objects.first()
    shop = Shop.objects.first()
    
    if not seller or not shop:
        print("–û—à–∏–±–∫–∞: –ù–µ—Ç –ø—Ä–æ–¥–∞–≤—Ü–∞ –∏–ª–∏ –º–∞–≥–∞–∑–∏–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        return 0
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–æ—Å—Ç—ã–º —Å–ø–æ—Å–æ–±–æ–º
    categories = Category.objects.all()
    if not categories.exists():
        print("–û—à–∏–±–∫–∞: –ù–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        return 0
    
    products_created = 0
    target_products = 500
    
    print(f"–ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ {target_products} —Ç–æ–≤–∞—Ä–æ–≤...")
    
    # –°–ø–∏—Å–æ–∫ –Ω–∞–∑–≤–∞–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤
    product_names = [
        '–°–º–∞—Ä—Ç—Ñ–æ–Ω', '–ù–æ—É—Ç–±—É–∫', '–ü–ª–∞–Ω—à–µ—Ç', '–ù–∞—É—à–Ω–∏–∫–∏', '–¢–µ–ª–µ–≤–∏–∑–æ—Ä',
        '–†—É–±–∞—à–∫–∞', '–î–∂–∏–Ω—Å—ã', '–ö—É—Ä—Ç–∫–∞', '–ü–ª–∞—Ç—å–µ', '–ö—Ä–æ—Å—Å–æ–≤–∫–∏',
        '–î–∏–≤–∞–Ω', '–°—Ç–æ–ª', '–°—Ç—É–ª', '–•–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫', '–°—Ç–∏—Ä–∞–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∞',
        '–ì–∞–Ω—Ç–µ–ª–∏', '–í–µ–ª–æ—Å–∏–ø–µ–¥', '–õ—ã–∂–∏', '–ö–Ω–∏–≥–∞', '–ò–≥—Ä—É—à–∫–∞',
        '–ö–æ—Å–º–µ—Ç–∏–∫–∞', '–®–∞–º–ø—É–Ω—å', '–ó—É–±–Ω–∞—è —â–µ—Ç–∫–∞', '–í–∏—Ç–∞–º–∏–Ω—ã', '–õ–∞–∫ –¥–ª—è –Ω–æ–≥—Ç–µ–π',
        '–ê–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã–µ –∑–∞–ø—á–∞—Å—Ç–∏', '–ú–æ—Ç–æ—Ä–Ω–æ–µ –º–∞—Å–ª–æ', '–ê–≤—Ç–æ–º–∞–≥–Ω–∏—Ç–æ–ª–∞', '–î–æ–º–∫—Ä–∞—Ç', '–ê–≤—Ç–æ—à–∞–º–ø—É–Ω—å'
    ]
    
    for i in range(target_products):
        try:
            # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
            category = random.choice(list(categories))
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
            base_name = random.choice(product_names)
            product_name = f"{base_name} {fake.word().title()} {random.randint(1, 999)}"
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
            description = f"""
            {product_name} - —ç—Ç–æ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä, –∫–æ—Ç–æ—Ä—ã–π –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –≤–∞—à–∏—Ö –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π.
            
            –û—Å–Ω–æ–≤–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
            ‚Ä¢ –í—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
            ‚Ä¢ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω
            ‚Ä¢ –î–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
            ‚Ä¢ –ü—Ä–æ—Å—Ç–æ—Ç–∞ –≤ —É—Ö–æ–¥–µ
            
            {fake.text(max_nb_chars=200)}
            """
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ü–µ–Ω—É
            base_price = random.randint(500, 50000)
            discount_price = None
            if random.choice([True, False]):
                discount_price = base_price * Decimal('0.8')  # 20% —Å–∫–∏–¥–∫–∞
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º SKU
            sku = f"SKU-{random.randint(100000, 999999)}"
            
            # –°–æ–∑–¥–∞–µ–º —Ç–æ–≤–∞—Ä
            product = Product.objects.create(
                category=category,
                seller=seller,
                currency='RUB',
                price=Decimal(str(base_price)),
                discount_price=discount_price,
                sku=sku,
                stock_quantity=random.randint(0, 100),
                is_active=True,
                rating=Decimal(str(round(random.uniform(3.0, 5.0), 2))),
                reviews_count=random.randint(0, 100)
            )
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã
            product.set_current_language('ru')
            product.name = product_name
            product.description = description.strip()
            product.save()
            
            # –î–æ–±–∞–≤–ª—è–µ–º –º–∞–≥–∞–∑–∏–Ω —á–µ—Ä–µ–∑ raw SQL
            from django.db import connection
            with connection.cursor() as cursor:
                cursor.execute(
                    "INSERT INTO products_product_shops (product_id, shop_id) VALUES (%s, %s)",
                    [product.id, shop.id]
                )
            
            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
            create_characteristics(product)
            
            # –°–æ–∑–¥–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            create_images(product)
            
            products_created += 1
            
            if products_created % 50 == 0:
                print(f"–°–æ–∑–¥–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {products_created}/{target_products}")
                
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞ {i+1}: {e}")
            continue
    
    return products_created

def create_characteristics(product):
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫"""
    characteristics = [
        ('–ú–∞—Ç–µ—Ä–∏–∞–ª', ['–ü–ª–∞—Å—Ç–∏–∫', '–ú–µ—Ç–∞–ª–ª', '–î–µ—Ä–µ–≤–æ', '–¢–∫–∞–Ω—å', '–°—Ç–µ–∫–ª–æ']),
        ('–¶–≤–µ—Ç', ['–ß–µ—Ä–Ω—ã–π', '–ë–µ–ª—ã–π', '–°–µ—Ä—ã–π', '–ö—Ä–∞—Å–Ω—ã–π', '–°–∏–Ω–∏–π', '–ó–µ–ª–µ–Ω—ã–π']),
        ('–†–∞–∑–º–µ—Ä', ['S', 'M', 'L', 'XL', 'XXL']),
        ('–í–µ—Å', ['100–≥', '500–≥', '1–∫–≥', '2–∫–≥', '5–∫–≥']),
        ('–°—Ç—Ä–∞–Ω–∞', ['–†–æ—Å—Å–∏—è', '–ö–∏—Ç–∞–π', '–ì–µ—Ä–º–∞–Ω–∏—è', '–Ø–ø–æ–Ω–∏—è', '–°–®–ê']),
        ('–ì–∞—Ä–∞–Ω—Ç–∏—è', ['6 –º–µ—Å—è—Ü–µ–≤', '1 –≥–æ–¥', '2 –≥–æ–¥–∞', '3 –≥–æ–¥–∞']),
        ('–ë—Ä–µ–Ω–¥', ['Samsung', 'Apple', 'Xiaomi', 'Huawei', 'LG']),
        ('–ú–æ–¥–µ–ª—å', ['2023', '2024', 'Pro', 'Max', 'Ultra'])
    ]
    
    # –°–æ–∑–¥–∞–µ–º 3-5 —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
    num_chars = random.randint(3, 5)
    selected_chars = random.sample(characteristics, num_chars)
    
    for char_name, values in selected_chars:
        ProductCharacteristic.objects.create(
            product=product,
            name=char_name,
            value=random.choice(values)
        )

def create_images(product):
    """–°–æ–∑–¥–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Ç–æ–≤–∞—Ä–∞"""
    # –°–æ–∑–¥–∞–µ–º 1-3 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —Ç–æ–≤–∞—Ä–∞
    num_images = random.randint(1, 3)
    
    for i in range(num_images):
        ProductImage.objects.create(
            product=product,
            image=f'products/{product.sku}_image_{i+1}.jpg',
            alt_text=f'{product.name} - –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ {i+1}',
            is_main=(i == 0)
        )

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤...")
    
    products_count = create_basic_products()
    
    print(f"\n‚úÖ –ì–æ—Ç–æ–≤–æ! –°–æ–∑–¥–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {products_count}")

if __name__ == '__main__':
    main()

