#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è 500 —Ç–æ–≤–∞—Ä–æ–≤ —Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
"""
import os
import django
import random
from faker import Faker
import uuid

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shoplist.settings')
django.setup()

from products.models import Category, Product, ProductCharacteristic, ProductImage, Seller, User

fake = Faker('ru_RU')

def create_products():
    print("üöÄ –°–æ–∑–¥–∞–µ–º 500 —Ç–æ–≤–∞—Ä–æ–≤...")
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–æ–¥–∞–≤—Ü–∞
    user, user_created = User.objects.get_or_create(
        username="seller_user",
        defaults={
            'email': 'seller@example.com',
            'first_name': '–ü—Ä–æ–¥–∞–≤–µ—Ü',
            'last_name': '–ú–∞–≥–∞–∑–∏–Ω',
            'role': 'seller'
        }
    )
    
    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–¥–∞–≤—Ü–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    seller, seller_created = Seller.objects.get_or_create(
        user=user,
        defaults={
            'company_name': "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω",
            'description': "–û–Ω–ª–∞–π–Ω –º–∞–≥–∞–∑–∏–Ω —Å —à–∏—Ä–æ–∫–∏–º –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–æ–º",
            'commission_rate': 5.0
        }
    )
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ 2-–≥–æ —É—Ä–æ–≤–Ω—è
    categories = Category.objects.all()
    level2_categories = [cat for cat in categories if cat.level == 2]
    
    if not level2_categories:
        print("‚ö†Ô∏è –ù–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π 2-–≥–æ —É—Ä–æ–≤–Ω—è! –°–æ–∑–¥–∞–π—Ç–µ –∏—Ö –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º —Å–∫—Ä–∏–ø—Ç–∞")
        return
    
    from django.db.models.signals import post_save
    from products.models import update_product_search_vector, update_product_rating

    # –û—Ç–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–∑—ã–≤–∞—é—Ç –æ—à–∏–±–∫–∏
    post_save.disconnect(update_product_search_vector, sender=Product)
    post_save.disconnect(update_product_rating, sender=Review)

    products_created = 0
    
    for _ in range(500):
        try:
            # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é 2-–≥–æ —É—Ä–æ–≤–Ω—è
            category = random.choice(level2_categories)
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞
            product_name = fake.catch_phrase()
            
            # –°–æ–∑–¥–∞–µ–º —Ç–æ–≤–∞—Ä —Å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
            product = Product(
                name=product_name,
                description=fake.paragraph(nb_sentences=5),
                price=random.randint(100, 100000),
                currency='RUB',
                category=category,
                seller=seller,
                sku=f"PRD-{uuid.uuid4().hex[:8].upper()}",
                stock_quantity=random.randint(5, 100),
                is_active=True,
                rating=round(random.uniform(3.5, 5.0), 2),
                reviews_count=0,
                views_count=0
            )
            product.save()
            
            # –°–æ–∑–¥–∞–µ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
            characteristics = [
                {"name": "–ú–∞—Ç–µ—Ä–∏–∞–ª", "value": fake.word(), "unit": ""},
                {"name": "–†–∞–∑–º–µ—Ä", "value": f"{random.randint(1, 100)}x{random.randint(1, 100)}", "unit": "—Å–º"},
                {"name": "–í–µ—Å", "value": random.randint(100, 5000), "unit": "–≥"},
                {"name": "–¶–≤–µ—Ç", "value": fake.color_name(), "unit": ""}
            ]
            
            for char in characteristics:
                ProductCharacteristic.objects.create(
                    product=product,
                    name=char["name"],
                    value=char["value"],
                    unit=char["unit"]
                )
            
            # –°–æ–∑–¥–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è-–∑–∞–≥–ª—É—à–∫–∏
            for i in range(random.randint(1, 5)):
                ProductImage.objects.create(
                    product=product,
                    alt_text=f"–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ {product_name}",
                    is_primary=(i == 0),
                    order=i
                )
            
            products_created += 1
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–æ–≤–∞—Ä: {product_name}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞: {e}")
    
    print(f"\nüéâ –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ {products_created} —Ç–æ–≤–∞—Ä–æ–≤!")

    # –í–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã –æ–±—Ä–∞—Ç–Ω–æ
    post_save.connect(update_product_search_vector, sender=Product)
    post_save.connect(update_product_rating, sender=Review)

if __name__ == '__main__':
    create_products()