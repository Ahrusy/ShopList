#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏
"""
import os
import django
from decimal import Decimal
import random
from faker import Faker

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shoplist.settings')
django.setup()

from products.models import Product, Category, Shop, Tag, Seller, ProductImage, ProductCharacteristic
from django.db import connection

fake = Faker('ru_RU')

# –†–µ–∞–ª—å–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã —Å –Ω–∞—Å—Ç–æ—è—â–∏–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏
REAL_PRODUCTS = [
    {"name": "iPhone 15 Pro Max 256GB", "category": "–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã", "price": 119990, "description": "–ù–æ–≤–µ–π—à–∏–π iPhone —Å —Ç–∏—Ç–∞–Ω–æ–≤—ã–º –∫–æ—Ä–ø—É—Å–æ–º, –∫–∞–º–µ—Ä–æ–π 48 –ú–ü –∏ —á–∏–ø–æ–º A17 Pro"},
    {"name": "Samsung Galaxy S24 Ultra", "category": "–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã", "price": 99990, "description": "–§–ª–∞–≥–º–∞–Ω—Å–∫–∏–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω Samsung —Å S Pen –∏ –∫–∞–º–µ—Ä–æ–π 200 –ú–ü"},
    {"name": "MacBook Air M3 13\"", "category": "–ù–æ—É—Ç–±—É–∫–∏", "price": 129990, "description": "–£–ª—å—Ç—Ä–∞—Ç–æ–Ω–∫–∏–π –Ω–æ—É—Ç–±—É–∫ Apple —Å —á–∏–ø–æ–º M3 –∏ –¥–∏—Å–ø–ª–µ–µ–º Liquid Retina"},
    {"name": "Dell XPS 13", "category": "–ù–æ—É—Ç–±—É–∫–∏", "price": 89990, "description": "–ü—Ä–µ–º–∏–∞–ª—å–Ω—ã–π –Ω–æ—É—Ç–±—É–∫ Dell —Å –±–µ–∑—Ä–∞–º–æ—á–Ω—ã–º –¥–∏—Å–ø–ª–µ–µ–º –∏ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–æ–º Intel Core i7"},
    {"name": "iPad Pro 12.9\" M2", "category": "–ü–ª–∞–Ω—à–µ—Ç—ã", "price": 79990, "description": "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω—à–µ—Ç Apple —Å –¥–∏—Å–ø–ª–µ–µ–º Liquid Retina XDR"},
    {"name": "Sony WH-1000XM5", "category": "–ù–∞—É—à–Ω–∏–∫–∏", "price": 29990, "description": "–ë–µ—Å–ø—Ä–æ–≤–æ–¥–Ω—ã–µ –Ω–∞—É—à–Ω–∏–∫–∏ Sony —Å –∞–∫—Ç–∏–≤–Ω—ã–º —à—É–º–æ–ø–æ–¥–∞–≤–ª–µ–Ω–∏–µ–º"},
    {"name": "AirPods Pro 2", "category": "–ù–∞—É—à–Ω–∏–∫–∏", "price": 19990, "description": "–ë–µ—Å–ø—Ä–æ–≤–æ–¥–Ω—ã–µ –Ω–∞—É—à–Ω–∏–∫–∏ Apple —Å –∞–∫—Ç–∏–≤–Ω—ã–º —à—É–º–æ–ø–æ–¥–∞–≤–ª–µ–Ω–∏–µ–º –∏ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω—ã–º –∑–≤—É–∫–æ–º"},
    {"name": "PlayStation 5", "category": "–ò–≥—Ä–æ–≤—ã–µ –∫–æ–Ω—Å–æ–ª–∏", "price": 49990, "description": "–ò–≥—Ä–æ–≤–∞—è –∫–æ–Ω—Å–æ–ª—å Sony PlayStation 5 —Å SSD –Ω–∞–∫–æ–ø–∏—Ç–µ–ª–µ–º"},
    {"name": "Xbox Series X", "category": "–ò–≥—Ä–æ–≤—ã–µ –∫–æ–Ω—Å–æ–ª–∏", "price": 45990, "description": "–ò–≥—Ä–æ–≤–∞—è –∫–æ–Ω—Å–æ–ª—å Microsoft Xbox Series X —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π 4K"},
    {"name": "Nintendo Switch OLED", "category": "–ò–≥—Ä–æ–≤—ã–µ –∫–æ–Ω—Å–æ–ª–∏", "price": 29990, "description": "–ì–∏–±—Ä–∏–¥–Ω–∞—è –∏–≥—Ä–æ–≤–∞—è –∫–æ–Ω—Å–æ–ª—å Nintendo —Å OLED –¥–∏—Å–ø–ª–µ–µ–º"},
    {"name": "–î–∂–∏–Ω—Å—ã Levi's 501", "category": "–î–∂–∏–Ω—Å—ã", "price": 5990, "description": "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –¥–∂–∏–Ω—Å—ã Levi's 501 –∏–∑ –¥–µ–Ω–∏–º–∞ –ø—Ä–µ–º–∏—É–º –∫–∞—á–µ—Å—Ç–≤–∞"},
    {"name": "–ö—Ä–æ—Å—Å–æ–≤–∫–∏ Nike Air Max 270", "category": "–û–±—É–≤—å", "price": 12990, "description": "–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –∫—Ä–æ—Å—Å–æ–≤–∫–∏ Nike —Å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–µ–π Air Max"},
    {"name": "–ö—É—Ä—Ç–∫–∞ The North Face", "category": "–í–µ—Ä—Ö–Ω—è—è –æ–¥–µ–∂–¥–∞", "price": 15990, "description": "–ó–∏–º–Ω—è—è –∫—É—Ä—Ç–∫–∞ The North Face —Å –º–µ–º–±—Ä–∞–Ω–æ–π Gore-Tex"},
    {"name": "–†—É–±–∞—à–∫–∞ Ralph Lauren", "category": "–†—É–±–∞—à–∫–∏", "price": 7990, "description": "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è —Ä—É–±–∞—à–∫–∞ Ralph Lauren –∏–∑ —Ö–ª–æ–ø–∫–∞ –ø—Ä–µ–º–∏—É–º –∫–∞—á–µ—Å—Ç–≤–∞"},
    {"name": "–ü–ª–∞—Ç—å–µ Zara", "category": "–ü–ª–∞—Ç—å—è", "price": 3990, "description": "–≠–ª–µ–≥–∞–Ω—Ç–Ω–æ–µ –ø–ª–∞—Ç—å–µ Zara –¥–ª—è –æ—Å–æ–±—ã—Ö —Å–ª—É—á–∞–µ–≤"},
    {"name": "–°–≤–∏—Ç–µ—Ä Uniqlo", "category": "–°–≤–∏—Ç–µ—Ä—ã", "price": 2990, "description": "–¢–µ–ø–ª—ã–π —Å–≤–∏—Ç–µ—Ä Uniqlo –∏–∑ –º–µ—Ä–∏–Ω–æ—Å–æ–≤–æ–π —à–µ—Ä—Å—Ç–∏"},
    {"name": "–ë–æ—Ç–∏–Ω–∫–∏ Timberland", "category": "–û–±—É–≤—å", "price": 11990, "description": "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –±–æ—Ç–∏–Ω–∫–∏ Timberland –∏–∑ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–π –∫–æ–∂–∏"},
    {"name": "–®–æ—Ä—Ç—ã Adidas", "category": "–®–æ—Ä—Ç—ã", "price": 1990, "description": "–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —à–æ—Ä—Ç—ã Adidas —Å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–µ–π ClimaLite"},
    {"name": "–ö–æ—Ñ–µ–º–∞—à–∏–Ω–∞ De'Longhi", "category": "–ö—É—Ö–æ–Ω–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞", "price": 24990, "description": "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∫–æ—Ñ–µ–º–∞—à–∏–Ω–∞ De'Longhi —Å –∫–∞–ø—É—á–∏–Ω–∞—Ç–æ—Ä–æ–º"},
    {"name": "–ü—ã–ª–µ—Å–æ—Å Dyson V15", "category": "–ë—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞", "price": 39990, "description": "–ë–µ—Å–ø—Ä–æ–≤–æ–¥–Ω–æ–π –ø—ã–ª–µ—Å–æ—Å Dyson V15 —Å –ª–∞–∑–µ—Ä–Ω–æ–π —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–µ–π"},
    {"name": "–•–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫ Samsung", "category": "–ö—Ä—É–ø–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞", "price": 89990, "description": "–î–≤—É—Ö–∫–∞–º–µ—Ä–Ω—ã–π —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫ Samsung —Å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–µ–π No Frost"},
    {"name": "–°—Ç–∏—Ä–∞–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∞ LG", "category": "–ö—Ä—É–ø–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞", "price": 49990, "description": "–°—Ç–∏—Ä–∞–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∞ LG —Å –∑–∞–≥—Ä—É–∑–∫–æ–π 7 –∫–≥ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–µ–π Direct Drive"},
    {"name": "–ú–∏–∫—Ä–æ–≤–æ–ª–Ω–æ–≤–∫–∞ Panasonic", "category": "–ö—É—Ö–æ–Ω–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞", "price": 8990, "description": "–ú–∏–∫—Ä–æ–≤–æ–ª–Ω–æ–≤–∞—è –ø–µ—á—å Panasonic —Å —Ñ—É–Ω–∫—Ü–∏–µ–π –≥—Ä–∏–ª—å"},
    {"name": "–ë–ª–µ–Ω–¥–µ—Ä Philips", "category": "–ö—É—Ö–æ–Ω–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞", "price": 5990, "description": "–ú–æ—â–Ω—ã–π –±–ª–µ–Ω–¥–µ—Ä Philips –¥–ª—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è —Å–º—É–∑–∏ –∏ –∫–æ–∫—Ç–µ–π–ª–µ–π"},
    {"name": "–£—Ç—é–≥ Tefal", "category": "–ë—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞", "price": 3990, "description": "–ü–∞—Ä–æ–≤–æ–π —É—Ç—é–≥ Tefal —Å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–µ–π —Å–∞–º–æ–æ—á–∏—Å—Ç–∫–∏"},
    {"name": "–§–µ–Ω Dyson Supersonic", "category": "–ö—Ä–∞—Å–æ—Ç–∞ –∏ –∑–¥–æ—Ä–æ–≤—å–µ", "price": 29990, "description": "–§–µ–Ω Dyson Supersonic —Å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–µ–π —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –¥–≤–∏–≥–∞—Ç–µ–ª—è"},
    {"name": "–ì–∞–Ω—Ç–µ–ª–∏ 20–∫–≥", "category": "–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã", "price": 4990, "description": "–†–∞–∑–±–æ—Ä–Ω—ã–µ –≥–∞–Ω—Ç–µ–ª–∏ 20–∫–≥ –¥–ª—è –¥–æ–º–∞—à–Ω–∏—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫"},
    {"name": "–ë–µ–≥–æ–≤–∞—è –¥–æ—Ä–æ–∂–∫–∞ NordicTrack", "category": "–ö–∞—Ä–¥–∏–æ —Ç—Ä–µ–Ω–∞–∂–µ—Ä—ã", "price": 79990, "description": "–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∞—è –±–µ–≥–æ–≤–∞—è –¥–æ—Ä–æ–∂–∫–∞ NordicTrack —Å –Ω–∞–∫–ª–æ–Ω–æ–º"},
    {"name": "–í–µ–ª–æ—Å–∏–ø–µ–¥ Trek", "category": "–í–µ–ª–æ—Å–∏–ø–µ–¥—ã", "price": 59990, "description": "–ì–æ—Ä–Ω—ã–π –≤–µ–ª–æ—Å–∏–ø–µ–¥ Trek —Å –∞–ª—é–º–∏–Ω–∏–µ–≤–æ–π —Ä–∞–º–æ–π"},
    {"name": "–ô–æ–≥–∞-–º–∞—Ç Liforme", "category": "–ô–æ–≥–∞ –∏ —Ñ–∏—Ç–Ω–µ—Å", "price": 3990, "description": "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –π–æ–≥–∞-–º–∞—Ç Liforme —Å –∞–Ω–∞—Ç–æ–º–∏—á–µ—Å–∫–∏–º–∏ –ª–∏–Ω–∏—è–º–∏"},
    {"name": "–ö—Ä–æ—Å—Å–æ–≤–∫–∏ Adidas Ultraboost", "category": "–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –æ–±—É–≤—å", "price": 14990, "description": "–ë–µ–≥–æ–≤—ã–µ –∫—Ä–æ—Å—Å–æ–≤–∫–∏ Adidas Ultraboost —Å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–µ–π Boost"},
    {"name": "–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –∫–æ—Å—Ç—é–º Nike", "category": "–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –æ–¥–µ–∂–¥–∞", "price": 7990, "description": "–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –∫–æ—Å—Ç—é–º Nike –∏–∑ –¥—ã—à–∞—â–µ–π —Ç–∫–∞–Ω–∏ Dri-FIT"},
    {"name": "–ì–∏—Ä—è 16–∫–≥", "category": "–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã", "price": 2990, "description": "–ß—É–≥—É–Ω–Ω–∞—è –≥–∏—Ä—è 16–∫–≥ –¥–ª—è —Å–∏–ª–æ–≤—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫"},
    {"name": "–°–∫–∞–∫–∞–ª–∫–∞ Adidas", "category": "–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã", "price": 990, "description": "–°–∫–æ—Ä–æ—Å—Ç–Ω–∞—è —Å–∫–∞–∫–∞–ª–∫–∞ Adidas —Å —Ä–µ–≥—É–ª–∏—Ä—É–µ–º–æ–π –¥–ª–∏–Ω–æ–π"},
    {"name": "–ì–∞—Ä—Ä–∏ –ü–æ—Ç—Ç–µ—Ä –∏ –§–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π –∫–∞–º–µ–Ω—å", "category": "–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞", "price": 890, "description": "–ü–µ—Ä–≤–∞—è –∫–Ω–∏–≥–∞ –æ –ì–∞—Ä—Ä–∏ –ü–æ—Ç—Ç–µ—Ä–µ –æ—Ç –î–∂.–ö. –†–æ—É–ª–∏–Ω–≥"},
    {"name": "1984 –î–∂–æ—Ä–¥–∂ –û—Ä—É—ç–ª–ª", "category": "–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞", "price": 590, "description": "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Ä–æ–º–∞–Ω-–∞–Ω—Ç–∏—É—Ç–æ–ø–∏—è –î–∂–æ—Ä–¥–∂–∞ –û—Ä—É—ç–ª–ª–∞"},
    {"name": "–ê—Ç–ª–∞—Å –∞–Ω–∞—Ç–æ–º–∏–∏ —á–µ–ª–æ–≤–µ–∫–∞", "category": "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞", "price": 2990, "description": "–ü–æ–¥—Ä–æ–±–Ω—ã–π –∞—Ç–ª–∞—Å –∞–Ω–∞—Ç–æ–º–∏–∏ —á–µ–ª–æ–≤–µ–∫–∞ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤-–º–µ–¥–∏–∫–æ–≤"},
    {"name": "Python –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö", "category": "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ", "price": 1990, "description": "–£—á–µ–±–Ω–∏–∫ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é –Ω–∞ Python –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤"},
    {"name": "–ö—É–ª–∏–Ω–∞—Ä–Ω–∞—è –∫–Ω–∏–≥–∞ –î–∂–µ–π–º–∏ –û–ª–∏–≤–µ—Ä–∞", "category": "–ö—É–ª–∏–Ω–∞—Ä–∏—è", "price": 1490, "description": "–°–±–æ—Ä–Ω–∏–∫ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –æ—Ç –∑–Ω–∞–º–µ–Ω–∏—Ç–æ–≥–æ —à–µ—Ñ-–ø–æ–≤–∞—Ä–∞ –î–∂–µ–π–º–∏ –û–ª–∏–≤–µ—Ä–∞"},
    {"name": "–≠–Ω—Ü–∏–∫–ª–æ–ø–µ–¥–∏—è –∂–∏–≤–æ—Ç–Ω—ã—Ö", "category": "–î–µ—Ç—Å–∫–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞", "price": 1990, "description": "–ö—Ä–∞—Å–æ—á–Ω–∞—è —ç–Ω—Ü–∏–∫–ª–æ–ø–µ–¥–∏—è –∂–∏–≤–æ—Ç–Ω—ã—Ö –¥–ª—è –¥–µ—Ç–µ–π"},
    {"name": "–ò—Å—Ç–æ—Ä–∏—è –†–æ—Å—Å–∏–∏", "category": "–ò—Å—Ç–æ—Ä–∏—è", "price": 1290, "description": "–£—á–µ–±–Ω–∏–∫ –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏ –¥–ª—è —à–∫–æ–ª—å–Ω–∏–∫–æ–≤"},
    {"name": "–°–ª–æ–≤–∞—Ä—å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞", "category": "–°–ª–æ–≤–∞—Ä–∏", "price": 890, "description": "–¢–æ–ª–∫–æ–≤—ã–π —Å–ª–æ–≤–∞—Ä—å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ Oxford"},
]

def create_real_products_with_sql():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ —á–µ—Ä–µ–∑ raw SQL"""
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ —á–µ—Ä–µ–∑ SQL...")
    
    with connection.cursor() as cursor:
        products_created = 0
        
        for i, product_data in enumerate(REAL_PRODUCTS):
            try:
                # –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é —á–µ—Ä–µ–∑ SQL
                category_slug = product_data['category'].lower().replace(' ', '-').replace('—ë', 'e')
                cursor.execute("""
                    INSERT INTO products_category (slug, icon, is_active, created_at, updated_at)
                    SELECT %s, %s, %s, NOW(), NOW()
                    WHERE NOT EXISTS (SELECT 1 FROM products_category WHERE slug = %s)
                """, [category_slug, 'tag', True, category_slug])
                
                # –ü–æ–ª—É—á–∞–µ–º ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                cursor.execute("SELECT id FROM products_category WHERE slug = %s", [category_slug])
                category_id = cursor.fetchone()[0]
                
                # –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                cursor.execute("""
                    INSERT INTO products_category_translation (master_id, language_code, name, description)
                    SELECT %s, %s, %s, %s
                    WHERE NOT EXISTS (SELECT 1 FROM products_category_translation WHERE master_id = %s AND language_code = %s)
                """, [category_id, 'ru', product_data['category'], f'–ö–∞—Ç–µ–≥–æ—Ä–∏—è {product_data["category"]}', category_id, 'ru'])
                
                # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–¥–∞–≤—Ü–∞
                cursor.execute("""
                    INSERT INTO products_seller (company_name, description, created_at, updated_at)
                    SELECT %s, %s, NOW(), NOW()
                    WHERE NOT EXISTS (SELECT 1 FROM products_seller WHERE company_name = %s)
                """, ["OZON Marketplace", "–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å OZON", "OZON Marketplace"])
                
                # –ü–æ–ª—É—á–∞–µ–º ID –ø—Ä–æ–¥–∞–≤—Ü–∞
                cursor.execute("SELECT id FROM products_seller WHERE company_name = %s", ["OZON Marketplace"])
                seller_id = cursor.fetchone()[0]
                
                # –°–æ–∑–¥–∞–µ–º —Ç–æ–≤–∞—Ä
                sku = f"OZON-{fake.unique.random_number(digits=6)}"
                price = product_data['price']
                discount_price = int(price * 0.8) if random.random() < 0.3 else None
                
                cursor.execute("""
                    INSERT INTO products_product (category_id, seller_id, currency, price, discount_price, sku, stock_quantity, is_active, rating, reviews_count, views_count, created_at, updated_at)
                    VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, NOW(), NOW())
                    RETURNING id
                """, [category_id, seller_id, 'RUB', price, discount_price, sku, random.randint(10, 100), True, round(random.uniform(4.0, 5.0), 2), random.randint(5, 150), random.randint(100, 1000)])
                
                product_id = cursor.fetchone()[0]
                
                # –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥ —Ç–æ–≤–∞—Ä–∞
                cursor.execute("""
                    INSERT INTO products_product_translation (master_id, language_code, name, description)
                    VALUES (%s, %s, %s, %s)
                """, [product_id, 'ru', product_data['name'], product_data['description']])
                
                # –°–æ–∑–¥–∞–µ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
                characteristics = [
                    ("–ë—Ä–µ–Ω–¥", product_data['name'].split()[0]),
                    ("–°—Ç—Ä–∞–Ω–∞", random.choice(["–†–æ—Å—Å–∏—è", "–ö–∏—Ç–∞–π", "–ì–µ—Ä–º–∞–Ω–∏—è", "–Ø–ø–æ–Ω–∏—è", "–°–®–ê", "–Æ–∂–Ω–∞—è –ö–æ—Ä–µ—è"])),
                    ("–ì–∞—Ä–∞–Ω—Ç–∏—è", random.choice(["6 –º–µ—Å—è—Ü–µ–≤", "1 –≥–æ–¥", "2 –≥–æ–¥–∞", "3 –≥–æ–¥–∞"])),
                    ("–í–µ—Å", f"{random.randint(100, 5000)} –≥"),
                    ("–¶–≤–µ—Ç", random.choice(["–ß–µ—Ä–Ω—ã–π", "–ë–µ–ª—ã–π", "–°–µ—Ä—ã–π", "–ö—Ä–∞—Å–Ω—ã–π", "–°–∏–Ω–∏–π", "–ó–µ–ª–µ–Ω—ã–π"])),
                ]
                
                for char_name, char_value in characteristics:
                    cursor.execute("""
                        INSERT INTO products_productcharacteristic (product_id, name, value, unit)
                        VALUES (%s, %s, %s, %s)
                    """, [product_id, char_name, char_value, "—à—Ç"])
                
                # –°–æ–∑–¥–∞–µ–º –º–∞–≥–∞–∑–∏–Ω
                cursor.execute("""
                    INSERT INTO products_shop (phone, email, created_at, updated_at)
                    SELECT %s, %s, NOW(), NOW()
                    WHERE NOT EXISTS (SELECT 1 FROM products_shop WHERE phone = %s)
                """, ["+7 (495) 232-32-32", "store@ozon.ru", "+7 (495) 232-32-32"])
                
                # –ü–æ–ª—É—á–∞–µ–º ID –º–∞–≥–∞–∑–∏–Ω–∞
                cursor.execute("SELECT id FROM products_shop WHERE phone = %s", ["+7 (495) 232-32-32"])
                shop_id = cursor.fetchone()[0]
                
                # –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥ –º–∞–≥–∞–∑–∏–Ω–∞
                cursor.execute("""
                    INSERT INTO products_shop_translation (master_id, language_code, name, address, city)
                    SELECT %s, %s, %s, %s, %s
                    WHERE NOT EXISTS (SELECT 1 FROM products_shop_translation WHERE master_id = %s AND language_code = %s)
                """, [shop_id, 'ru', "OZON Store", "–ú–æ—Å–∫–≤–∞, —É–ª. –õ—å–≤–∞ –¢–æ–ª—Å—Ç–æ–≥–æ, 16", "–ú–æ—Å–∫–≤–∞", shop_id, 'ru'])
                
                # –°–≤—è–∑—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä —Å –º–∞–≥–∞–∑–∏–Ω–æ–º
                cursor.execute("""
                    INSERT INTO products_product_shops (product_id, shop_id)
                    SELECT %s, %s
                    WHERE NOT EXISTS (SELECT 1 FROM products_product_shops WHERE product_id = %s AND shop_id = %s)
                """, [product_id, shop_id, product_id, shop_id])
                
                products_created += 1
                print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–æ–≤–∞—Ä: {product_data['name']} - {price} ‚ÇΩ")
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞ {product_data['name']}: {e}")
        
        print(f"\nüéâ –ì–æ—Ç–æ–≤–æ! –°–æ–∑–¥–∞–Ω–æ {products_created} —Ä–µ–∞–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤!")
        return products_created

if __name__ == '__main__':
    create_real_products_with_sql()
