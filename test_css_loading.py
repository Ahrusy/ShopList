#!/usr/bin/env python
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ CSS —Ñ–∞–π–ª–∞ —Ç–æ–≤–∞—Ä–Ω–æ–≥–æ —Å–ª–∞–π–¥–µ—Ä–∞
"""

import os
import sys
import django
from django.conf import settings

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shoplist.settings')
django.setup()

from django.test import Client
from django.contrib.staticfiles.testing import StaticLiveServerTestCase
import requests

def test_css_file_access():
    """–¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ CSS —Ñ–∞–π–ª–∞"""
    print("üéØ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ CSS —Ñ–∞–π–ª–∞ —Ç–æ–≤–∞—Ä–Ω–æ–≥–æ —Å–ª–∞–π–¥–µ—Ä–∞...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ staticfiles
    css_path = os.path.join(settings.STATIC_ROOT, 'css', 'product-slider.css')
    if os.path.exists(css_path):
        print(f"‚úÖ CSS —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω: {css_path}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
        file_size = os.path.getsize(css_path)
        print(f"üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size} –±–∞–π—Ç")
        
        if file_size > 0:
            print("‚úÖ –§–∞–π–ª –Ω–µ –ø—É—Å—Ç–æ–π")
        else:
            print("‚ùå –§–∞–π–ª –ø—É—Å—Ç–æ–π")
    else:
        print(f"‚ùå CSS —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {css_path}")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —á–µ—Ä–µ–∑ HTTP
    try:
        client = Client()
        response = client.get('/static/css/product-slider.css')
        
        if response.status_code == 200:
            print("‚úÖ CSS —Ñ–∞–π–ª –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ HTTP")
            # –î–ª—è FileResponse –∏—Å–ø–æ–ª—å–∑—É–µ–º streaming_content
            content = b''.join(response.streaming_content) if hasattr(response, 'streaming_content') else response.content
            print(f"üìä –†–∞–∑–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: {len(content)} –±–∞–π—Ç")
            return True
        else:
            print(f"‚ùå CSS —Ñ–∞–π–ª –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ HTTP. –°—Ç–∞—Ç—É—Å: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ HTTP: {e}")
        return False

def test_main_page_with_css():
    """–¢–µ—Å—Ç –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å CSS"""
    print("\nüéØ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å CSS...")
    
    try:
        client = Client()
        response = client.get('/ru/')
        
        if response.status_code == 200:
            print("‚úÖ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ CSS –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –≤ HTML
            content = response.content.decode('utf-8')
            if 'product-slider.css' in content:
                print("‚úÖ CSS —Ñ–∞–π–ª –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –≤ HTML")
                return True
            else:
                print("‚ùå CSS —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ HTML")
                return False
        else:
            print(f"‚ùå –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è. –°—Ç–∞—Ç—É—Å: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {e}")
        return False

if __name__ == '__main__':
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ CSS —Ñ–∞–π–ª–∞ —Ç–æ–≤–∞—Ä–Ω–æ–≥–æ —Å–ª–∞–π–¥–µ—Ä–∞...\n")
    
    css_ok = test_css_file_access()
    page_ok = test_main_page_with_css()
    
    print(f"\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
    print(f"   CSS —Ñ–∞–π–ª: {'‚úÖ OK' if css_ok else '‚ùå –û–®–ò–ë–ö–ê'}")
    print(f"   –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: {'‚úÖ OK' if page_ok else '‚ùå –û–®–ò–ë–ö–ê'}")
    
    if css_ok and page_ok:
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –¢–æ–≤–∞—Ä–Ω—ã–π —Å–ª–∞–π–¥–µ—Ä –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
    else:
        print("\n‚ö†Ô∏è  –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–≥—Ä—É–∑–∫–æ–π CSS —Ñ–∞–π–ª–∞.")
