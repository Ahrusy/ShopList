#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö –±–∞–Ω–Ω–µ—Ä–æ–≤ —Å –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
"""

import os
import sys
import django
from PIL import Image, ImageDraw, ImageFont
from io import BytesIO
from django.core.files.base import ContentFile

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shoplist.settings')
django.setup()

from products.models import Banner

def create_banner_image(title, subtitle, width=400, height=200, bg_color=(255, 107, 107), text_color=(255, 255, 255)):
    """–°–æ–∑–¥–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±–∞–Ω–Ω–µ—Ä–∞ —Å —Ç–µ–∫—Å—Ç–æ–º"""
    # –°–æ–∑–¥–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    img = Image.new('RGB', (width, height), bg_color)
    draw = ImageDraw.Draw(img)
    
    # –ü—ã—Ç–∞–µ–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π —à—Ä–∏—Ñ—Ç
    try:
        # –î–ª—è Windows
        title_font = ImageFont.truetype("arial.ttf", 24)
        subtitle_font = ImageFont.truetype("arial.ttf", 16)
    except:
        try:
            # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —à—Ä–∏—Ñ—Ç
            title_font = ImageFont.truetype("calibri.ttf", 24)
            subtitle_font = ImageFont.truetype("calibri.ttf", 16)
        except:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —à—Ä–∏—Ñ—Ç
            title_font = ImageFont.load_default()
            subtitle_font = ImageFont.load_default()
    
    # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã —Ç–µ–∫—Å—Ç–∞
    title_bbox = draw.textbbox((0, 0), title, font=title_font)
    title_width = title_bbox[2] - title_bbox[0]
    title_height = title_bbox[3] - title_bbox[1]
    
    subtitle_bbox = draw.textbbox((0, 0), subtitle, font=subtitle_font)
    subtitle_width = subtitle_bbox[2] - subtitle_bbox[0]
    subtitle_height = subtitle_bbox[3] - subtitle_bbox[1]
    
    # –í—ã—á–∏—Å–ª—è–µ–º –ø–æ–∑–∏—Ü–∏–∏ –¥–ª—è —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è
    title_x = (width - title_width) // 2
    title_y = (height - title_height - subtitle_height - 10) // 2
    
    subtitle_x = (width - subtitle_width) // 2
    subtitle_y = title_y + title_height + 10
    
    # –†–∏—Å—É–µ–º —Ç–µ–∫—Å—Ç
    draw.text((title_x, title_y), title, fill=text_color, font=title_font)
    draw.text((subtitle_x, subtitle_y), subtitle, fill=text_color, font=subtitle_font)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ BytesIO
    img_io = BytesIO()
    img.save(img_io, format='JPEG', quality=85)
    img_io.seek(0)
    
    return ContentFile(img_io.getvalue())

def create_marketing_banners():
    """–°–æ–∑–¥–∞–µ—Ç –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ –±–∞–Ω–Ω–µ—Ä—ã —Å –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º"""
    print("üéØ –°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö –±–∞–Ω–Ω–µ—Ä–æ–≤...")
    
    # –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –±–∞–Ω–Ω–µ—Ä—ã
    Banner.objects.all().delete()
    print("üóëÔ∏è  –£–¥–∞–ª–µ–Ω—ã —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –±–∞–Ω–Ω–µ—Ä—ã")
    
    # –°–ø–∏—Å–æ–∫ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö –±–∞–Ω–Ω–µ—Ä–æ–≤
    banners_data = [
        {
            'title': 'üî• –ú–ï–ì–ê –†–ê–°–ü–†–û–î–ê–ñ–ê',
            'subtitle': '–°–∫–∏–¥–∫–∏ –¥–æ 80% –Ω–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫—É –∏ –±—ã—Ç–æ–≤—É—é —Ç–µ—Ö–Ω–∏–∫—É',
            'banner_type': 'main',
            'bg_color': (220, 38, 127),  # –Ø—Ä–∫–æ-—Ä–æ–∑–æ–≤—ã–π
            'text_color': (255, 255, 255),
            'link': '/ru/categories/electronics/',
            'sort_order': 1
        },
        {
            'title': 'üíé –ü–†–ï–ú–ò–£–ú –ö–û–õ–õ–ï–ö–¶–ò–Ø',
            'subtitle': '–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –æ—Ç –º–∏—Ä–æ–≤—ã—Ö –±—Ä–µ–Ω–¥–æ–≤',
            'banner_type': 'main',
            'bg_color': (59, 130, 246),  # –°–∏–Ω–∏–π
            'text_color': (255, 255, 255),
            'link': '/ru/categories/premium/',
            'sort_order': 2
        },
        {
            'title': 'üè† –î–õ–Ø –î–û–ú–ê –ò –°–ê–î–ê',
            'subtitle': '–í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–ª—è —É—é—Ç–∞ –∏ –∫–æ–º—Ñ–æ—Ä—Ç–∞',
            'banner_type': 'main',
            'bg_color': (34, 197, 94),  # –ó–µ–ª–µ–Ω—ã–π
            'text_color': (255, 255, 255),
            'link': '/ru/categories/home-garden/',
            'sort_order': 3
        },
        {
            'title': 'üë∂ –î–ï–¢–°–ö–ò–ô –ú–ò–†',
            'subtitle': '–ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –¥–ª—è –¥–µ—Ç–µ–π',
            'banner_type': 'footer',
            'bg_color': (251, 191, 36),  # –ñ–µ–ª—Ç—ã–π
            'text_color': (0, 0, 0),
            'link': '/ru/categories/kids/',
            'sort_order': 1
        },
        {
            'title': 'üíÑ –ö–†–ê–°–û–¢–ê –ò –ó–î–û–†–û–í–¨–ï',
            'subtitle': '–£—Ö–æ–¥ –∑–∞ —Å–æ–±–æ–π –∏ –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –∑–¥–æ—Ä–æ–≤—å—è',
            'banner_type': 'footer',
            'bg_color': (236, 72, 153),  # –†–æ–∑–æ–≤—ã–π
            'text_color': (255, 255, 255),
            'link': '/ru/categories/beauty/',
            'sort_order': 2
        },
        {
            'title': 'üèÉ‚Äç‚ôÇÔ∏è –°–ü–û–†–¢ –ò –ê–ö–¢–ò–í–ù–û–°–¢–¨',
            'subtitle': '–≠–∫–∏–ø–∏—Ä–æ–≤–∫–∞ –¥–ª—è —Å–ø–æ—Ä—Ç–∞ –∏ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –æ—Ç–¥—ã—Ö–∞',
            'banner_type': 'footer',
            'bg_color': (16, 185, 129),  # –ò–∑—É–º—Ä—É–¥–Ω—ã–π
            'text_color': (255, 255, 255),
            'link': '/ru/categories/sports/',
            'sort_order': 3
        },
        {
            'title': 'üì± –ù–û–í–ò–ù–ö–ò –¢–ï–•–ù–û–õ–û–ì–ò–ô',
            'subtitle': '–ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≤ –º–∏—Ä–µ –≥–∞–¥–∂–µ—Ç–æ–≤',
            'banner_type': 'sidebar',
            'bg_color': (99, 102, 241),  # –§–∏–æ–ª–µ—Ç–æ–≤—ã–π
            'text_color': (255, 255, 255),
            'link': '/ru/categories/technology/',
            'sort_order': 1
        },
        {
            'title': 'üëó –ú–û–î–ê –ò –°–¢–ò–õ–¨',
            'subtitle': '–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã –≤ –æ–¥–µ–∂–¥–µ –∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä–∞—Ö',
            'banner_type': 'sidebar',
            'bg_color': (239, 68, 68),  # –ö—Ä–∞—Å–Ω—ã–π
            'text_color': (255, 255, 255),
            'link': '/ru/categories/fashion/',
            'sort_order': 2
        }
    ]
    
    created_count = 0
    
    for banner_data in banners_data:
        try:
            # –°–æ–∑–¥–∞–µ–º –±–∞–Ω–Ω–µ—Ä
            banner = Banner.objects.create(
                title=banner_data['title'],
                subtitle=banner_data['subtitle'],
                banner_type=banner_data['banner_type'],
                link=banner_data['link'],
                sort_order=banner_data['sort_order'],
                is_active=True
            )
            
            # –°–æ–∑–¥–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            width = 400 if banner_data['banner_type'] in ['main'] else 300
            height = 200 if banner_data['banner_type'] in ['main'] else 150
            
            image_content = create_banner_image(
                banner_data['title'],
                banner_data['subtitle'],
                width=width,
                height=height,
                bg_color=banner_data['bg_color'],
                text_color=banner_data['text_color']
            )
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            banner.image.save(
                f"marketing_banner_{banner.id}.jpg",
                image_content,
                save=True
            )
            
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω –±–∞–Ω–Ω–µ—Ä: {banner.title}")
            created_count += 1
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±–∞–Ω–Ω–µ—Ä–∞ '{banner_data['title']}': {e}")
    
    print(f"\nüéâ –°–æ–∑–¥–∞–Ω–æ {created_count} –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö –±–∞–Ω–Ω–µ—Ä–æ–≤")
    print(f"üìä –í—Å–µ–≥–æ –±–∞–Ω–Ω–µ—Ä–æ–≤ –≤ –±–∞–∑–µ: {Banner.objects.count()}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –±–∞–Ω–Ω–µ—Ä—ã
    print("\nüìã –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±–∞–Ω–Ω–µ—Ä–æ–≤:")
    for banner in Banner.objects.all().order_by('sort_order'):
        print(f"  - {banner.title} ({banner.banner_type}) - {'–ê–∫—Ç–∏–≤–µ–Ω' if banner.is_active else '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}")

if __name__ == '__main__':
    create_marketing_banners()

