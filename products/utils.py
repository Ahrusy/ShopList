"""
Утилиты для работы с категориями и товарами
"""
from django.utils.text import slugify
from django.utils.translation import gettext_lazy as _


class CategorySubcategoryGenerator:
    """Генератор подкатегорий для различных типов товаров"""
    
    # Словарь подкатегорий для разных категорий
    SUBCATEGORIES_MAP = {
        'электроника': {
            'level_2': [
                'Смартфоны и телефоны',
                'Компьютеры и ноутбуки', 
                'Телевизоры и аудио',
                'Фото и видео',
                'Игровые консоли',
                'Аксессуары'
            ],
            'level_3': {
                'Смартфоны и телефоны': ['iPhone', 'Samsung', 'Xiaomi', 'Huawei', 'Аксессуары для телефонов'],
                'Компьютеры и ноутбуки': ['Ноутбуки', 'Настольные ПК', 'Планшеты', 'Комплектующие', 'Периферия'],
                'Телевизоры и аудио': ['Телевизоры', 'Наушники', 'Колонки', 'Аудиосистемы', 'Кабели'],
                'Фото и видео': ['Фотоаппараты', 'Видеокамеры', 'Объективы', 'Штативы', 'Карты памяти'],
                'Игровые консоли': ['PlayStation', 'Xbox', 'Nintendo', 'Игры', 'Аксессуары'],
                'Аксессуары': ['Зарядные устройства', 'Чехлы', 'Защитные стекла', 'Кабели', 'Подставки']
            }
        },
        'одежда': {
            'level_2': [
                'Мужская одежда',
                'Женская одежда',
                'Детская одежда',
                'Обувь',
                'Аксессуары',
                'Спортивная одежда'
            ],
            'level_3': {
                'Мужская одежда': ['Рубашки', 'Брюки', 'Джинсы', 'Куртки', 'Костюмы', 'Нижнее белье'],
                'Женская одежда': ['Платья', 'Блузки', 'Юбки', 'Брюки', 'Куртки', 'Нижнее белье'],
                'Детская одежда': ['Для мальчиков', 'Для девочек', 'Для новорожденных', 'Школьная форма'],
                'Обувь': ['Мужская обувь', 'Женская обувь', 'Детская обувь', 'Спортивная обувь'],
                'Аксессуары': ['Сумки', 'Ремни', 'Шарфы', 'Перчатки', 'Головные уборы'],
                'Спортивная одежда': ['Для фитнеса', 'Для бега', 'Для плавания', 'Для йоги', 'Командная форма']
            }
        },
        'дом и сад': {
            'level_2': [
                'Мебель',
                'Декор и текстиль',
                'Кухонные принадлежности',
                'Садовые товары',
                'Инструменты',
                'Освещение'
            ],
            'level_3': {
                'Мебель': ['Диваны', 'Кресла', 'Столы', 'Стулья', 'Шкафы', 'Кровати'],
                'Декор и текстиль': ['Подушки', 'Пледы', 'Картины', 'Вазы', 'Свечи', 'Шторы'],
                'Кухонные принадлежности': ['Посуда', 'Столовые приборы', 'Кухонная техника', 'Аксессуары'],
                'Садовые товары': ['Растения', 'Горшки', 'Удобрения', 'Садовая мебель', 'Декор'],
                'Инструменты': ['Ручные инструменты', 'Электроинструменты', 'Измерительные приборы'],
                'Освещение': ['Люстры', 'Настольные лампы', 'Торшеры', 'Светодиодные лампы']
            }
        },
        'красота': {
            'level_2': [
                'Уход за лицом',
                'Уход за телом',
                'Макияж',
                'Парфюмерия',
                'Уход за волосами',
                'Мужская косметика'
            ],
            'level_3': {
                'Уход за лицом': ['Очищение', 'Увлажнение', 'Антивозрастной уход', 'Маски', 'Сыворотки'],
                'Уход за телом': ['Гели для душа', 'Кремы для тела', 'Скрабы', 'Дезодоранты'],
                'Макияж': ['Тональные средства', 'Помады', 'Тени', 'Тушь', 'Румяна'],
                'Парфюмерия': ['Женские ароматы', 'Мужские ароматы', 'Унисекс', 'Дорожные форматы'],
                'Уход за волосами': ['Шампуни', 'Кондиционеры', 'Маски', 'Стайлинг', 'Краски'],
                'Мужская косметика': ['Уход за лицом', 'Средства для бритья', 'Дезодоранты', 'Парфюм']
            }
        },
        'спорт': {
            'level_2': [
                'Фитнес и тренажеры',
                'Спортивная одежда',
                'Спортивная обувь',
                'Командные виды спорта',
                'Водные виды спорта',
                'Туризм и отдых'
            ],
            'level_3': {
                'Фитнес и тренажеры': ['Тренажеры', 'Гантели', 'Коврики', 'Фитболы', 'Эспандеры'],
                'Спортивная одежда': ['Для бега', 'Для фитнеса', 'Для плавания', 'Для йоги'],
                'Спортивная обувь': ['Кроссовки', 'Бутсы', 'Кеды', 'Специализированная обувь'],
                'Командные виды спорта': ['Футбол', 'Баскетбол', 'Волейбол', 'Хоккей'],
                'Водные виды спорта': ['Плавание', 'Дайвинг', 'Серфинг', 'Водные лыжи'],
                'Туризм и отдых': ['Палатки', 'Спальные мешки', 'Рюкзаки', 'Термосы']
            }
        },
        'автотовары': {
            'level_2': [
                'Запчасти',
                'Аксессуары',
                'Автохимия',
                'Шины и диски',
                'Электроника',
                'Инструменты'
            ],
            'level_3': {
                'Запчасти': ['Двигатель', 'Тормозная система', 'Подвеска', 'Электрика', 'Кузов'],
                'Аксессуары': ['Чехлы', 'Коврики', 'Органайзеры', 'Держатели', 'Ароматизаторы'],
                'Автохимия': ['Моющие средства', 'Полироли', 'Масла', 'Антифризы', 'Присадки'],
                'Шины и диски': ['Летние шины', 'Зимние шины', 'Диски', 'Камеры', 'Вентили'],
                'Электроника': ['Магнитолы', 'Навигаторы', 'Видеорегистраторы', 'Сигнализации'],
                'Инструменты': ['Ключи', 'Отвертки', 'Домкраты', 'Компрессоры', 'Наборы']
            }
        },
        'книги': {
            'level_2': [
                'Художественная литература',
                'Научная литература',
                'Детские книги',
                'Учебная литература',
                'Бизнес книги',
                'Хобби и досуг'
            ],
            'level_3': {
                'Художественная литература': ['Романы', 'Детективы', 'Фантастика', 'Классика', 'Поэзия'],
                'Научная литература': ['Физика', 'Химия', 'Биология', 'Математика', 'История'],
                'Детские книги': ['Сказки', 'Развивающие', 'Раскраски', 'Энциклопедии'],
                'Учебная литература': ['Школьные учебники', 'ВУЗовские учебники', 'Справочники'],
                'Бизнес книги': ['Менеджмент', 'Маркетинг', 'Финансы', 'Предпринимательство'],
                'Хобби и досуг': ['Кулинария', 'Рукоделие', 'Садоводство', 'Путешествия']
            }
        },
        'продукты': {
            'level_2': [
                'Молочные продукты',
                'Мясо и птица',
                'Рыба и морепродукты',
                'Овощи и фрукты',
                'Хлеб и выпечка',
                'Напитки'
            ],
            'level_3': {
                'Молочные продукты': ['Молоко', 'Сыры', 'Йогурты', 'Творог', 'Сметана'],
                'Мясо и птица': ['Говядина', 'Свинина', 'Курица', 'Индейка', 'Колбасы'],
                'Рыба и морепродукты': ['Свежая рыба', 'Замороженная рыба', 'Креветки', 'Крабы'],
                'Овощи и фрукты': ['Свежие овощи', 'Свежие фрукты', 'Замороженные', 'Консервы'],
                'Хлеб и выпечка': ['Хлеб', 'Булочки', 'Торты', 'Печенье', 'Пирожные'],
                'Напитки': ['Соки', 'Газированные', 'Чай', 'Кофе', 'Алкогольные']
            }
        },
        'зоотовары': {
            'level_2': [
                'Корма',
                'Аксессуары',
                'Игрушки',
                'Уход и гигиена',
                'Домики и лежанки',
                'Ветеринария'
            ],
            'level_3': {
                'Корма': ['Для собак', 'Для кошек', 'Для птиц', 'Для рыб', 'Для грызунов'],
                'Аксессуары': ['Поводки', 'Ошейники', 'Миски', 'Переноски', 'Клетки'],
                'Игрушки': ['Для собак', 'Для кошек', 'Для птиц', 'Интерактивные'],
                'Уход и гигиена': ['Шампуни', 'Расчески', 'Когтерезы', 'Зубные щетки'],
                'Домики и лежанки': ['Лежанки', 'Домики', 'Подушки', 'Коврики'],
                'Ветеринария': ['Витамины', 'Лекарства', 'Средства от паразитов']
            }
        }
    }
    
    def _generate_unique_slug(self, name, parent=None):
        """Генерирует уникальный slug для категории"""
        from .models import Category
        import uuid
        
        base_slug = slugify(name)
        if not base_slug:
            base_slug = f"category-{uuid.uuid4().hex[:8]}"
        
        # Если есть родитель, добавляем его slug как префикс
        if parent and parent.slug:
            base_slug = f"{parent.slug}-{base_slug}"
        
        # Проверяем уникальность
        slug = base_slug
        counter = 1
        while Category.objects.filter(slug=slug).exists():
            slug = f"{base_slug}-{counter}"
            counter += 1
        
        return slug

    def ensure_subcategories_for_category(self, category):
        """Создает подкатегории для указанной категории"""
        from .models import Category
        
        category_name_lower = category.name.lower()
        
        # Ищем подходящий шаблон подкатегорий
        template_key = None
        for key in self.SUBCATEGORIES_MAP.keys():
            if key in category_name_lower or category_name_lower in key:
                template_key = key
                break
        
        if not template_key:
            # Если не нашли точное совпадение, используем общий шаблон
            template_key = self._get_generic_template_key(category_name_lower)
        
        if not template_key:
            return []
        
        template = self.SUBCATEGORIES_MAP[template_key]
        created_categories = []
        
        # Создаем подкатегории 2-го уровня
        for subcategory_name in template['level_2']:
            unique_slug = self._generate_unique_slug(subcategory_name, category)
            
            subcategory, created = Category.objects.get_or_create(
                name=subcategory_name,
                parent=category,
                defaults={
                    'slug': unique_slug,
                    'category_level': 1,
                    'is_active': True,
                    'show_in_megamenu': True,
                    'sort_order': len(created_categories)
                }
            )
            if created:
                created_categories.append(subcategory)
            
            # Создаем подкатегории 3-го уровня
            if subcategory_name in template['level_3']:
                for sub_subcategory_name in template['level_3'][subcategory_name]:
                    sub_unique_slug = self._generate_unique_slug(sub_subcategory_name, subcategory)
                    
                    sub_subcategory, sub_created = Category.objects.get_or_create(
                        name=sub_subcategory_name,
                        parent=subcategory,
                        defaults={
                            'slug': sub_unique_slug,
                            'category_level': 2,
                            'is_active': True,
                            'show_in_megamenu': True,
                            'sort_order': 0
                        }
                    )
                    if sub_created:
                        created_categories.append(sub_subcategory)
        
        return created_categories
    
    def _get_generic_template_key(self, category_name):
        """Возвращает подходящий шаблон на основе ключевых слов"""
        keywords_map = {
            'электроника': ['телефон', 'компьютер', 'техника', 'гаджет'],
            'одежда': ['одежда', 'мода', 'стиль', 'fashion'],
            'дом и сад': ['дом', 'сад', 'мебель', 'интерьер'],
            'красота': ['красота', 'косметика', 'уход', 'парфюм'],
            'спорт': ['спорт', 'фитнес', 'тренировка', 'активность'],
            'автотовары': ['авто', 'машина', 'автомобиль', 'транспорт'],
            'книги': ['книга', 'литература', 'чтение'],
            'продукты': ['продукт', 'еда', 'питание', 'пища'],
            'зоотовары': ['животное', 'питомец', 'зоо', 'корм']
        }
        
        for template_key, keywords in keywords_map.items():
            for keyword in keywords:
                if keyword in category_name:
                    return template_key
        
        return None
    
    def create_all_subcategories(self):
        """Создает подкатегории для всех корневых категорий"""
        from .models import Category
        
        root_categories = Category.objects.filter(parent=None, is_active=True)
        all_created = []
        
        for category in root_categories:
            created = self.ensure_subcategories_for_category(category)
            all_created.extend(created)
        
        return all_created