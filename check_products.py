#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
"""
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shoplist.settings_simple')
django.setup()

from products_simple.models import Category, Product, ProductCharacteristic, ProductImage, Seller

def check_database_stats():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("=== –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–• ===")
    
    total_products = Product.objects.count()
    total_categories = Category.objects.count()
    total_characteristics = ProductCharacteristic.objects.count()
    total_images = ProductImage.objects.count()
    total_sellers = Seller.objects.count()
    
    print(f"–¢–æ–≤–∞—Ä–æ–≤: {total_products}")
    print(f"–ö–∞—Ç–µ–≥–æ—Ä–∏–π: {total_categories}")
    print(f"–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫: {total_characteristics}")
    print(f"–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {total_images}")
    print(f"–ü—Ä–æ–¥–∞–≤—Ü–æ–≤: {total_sellers}")
    
    return total_products, total_categories, total_characteristics

def check_categories_hierarchy():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏–µ—Ä–∞—Ä—Ö–∏—é –∫–∞—Ç–µ–≥–æ—Ä–∏–π"""
    print("\n=== –ò–ï–†–ê–†–•–ò–Ø –ö–ê–¢–ï–ì–û–†–ò–ô ===")
    
    root_categories = Category.objects.filter(parent__isnull=True)
    
    for root in root_categories:
        print(f"\nüìÅ {root.name} (—É—Ä–æ–≤–µ–Ω—å {root.level})")
        
        # –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ 2-–≥–æ —É—Ä–æ–≤–Ω—è
        subcategories = root.get_children()
        for sub in subcategories:
            print(f"  ‚îî‚îÄ‚îÄ üìÇ {sub.name} (—É—Ä–æ–≤–µ–Ω—å {sub.level})")
            
            # –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ 3-–≥–æ —É—Ä–æ–≤–Ω—è (–µ—Å–ª–∏ –µ—Å—Ç—å)
            sub_subcategories = sub.get_children()
            for sub_sub in sub_subcategories:
                print(f"      ‚îî‚îÄ‚îÄ üìÑ {sub_sub.name} (—É—Ä–æ–≤–µ–Ω—å {sub_sub.level})")

def check_products_by_category():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–æ–≤–∞—Ä—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º"""
    print("\n=== –¢–û–í–ê–†–´ –ü–û –ö–ê–¢–ï–ì–û–†–ò–Ø–ú ===")
    
    categories = Category.objects.filter(parent__isnull=True)
    
    for category in categories:
        products_count = Product.objects.filter(category=category).count()
        print(f"\nüìÅ {category.name}: {products_count} —Ç–æ–≤–∞—Ä–æ–≤")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Ç–æ–≤–∞—Ä–æ–≤
        subcategories = category.get_children()
        for sub in subcategories:
            sub_products_count = Product.objects.filter(category=sub).count()
            if sub_products_count > 0:
                print(f"  ‚îî‚îÄ‚îÄ üìÇ {sub.name}: {sub_products_count} —Ç–æ–≤–∞—Ä–æ–≤")

def check_product_details():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–µ—Ç–∞–ª–∏ —Ç–æ–≤–∞—Ä–æ–≤"""
    print("\n=== –î–ï–¢–ê–õ–ò –¢–û–í–ê–†–û–í ===")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 —Ç–æ–≤–∞—Ä–æ–≤ —Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏
    products = Product.objects.all()[:5]
    
    for product in products:
        print(f"\nüõçÔ∏è {product.name}")
        print(f"   –¶–µ–Ω–∞: {product.price}‚ÇΩ")
        print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {product.category.name if product.category else '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}")
        print(f"   –ü—Ä–æ–¥–∞–≤–µ—Ü: {product.seller.company_name if product.seller else '–ù–µ —É–∫–∞–∑–∞–Ω'}")
        print(f"   –†–µ–π—Ç–∏–Ω–≥: {product.rating}")
        print(f"   –û—Ç–∑—ã–≤–æ–≤: {product.reviews_count}")
        print(f"   –ù–∞ —Å–∫–ª–∞–¥–µ: {product.stock_quantity}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
        characteristics = ProductCharacteristic.objects.filter(product=product)[:5]
        if characteristics:
            print("   –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:")
            for char in characteristics:
                unit = f" {char.unit}" if char.unit else ""
                print(f"     ‚Ä¢ {char.name}: {char.value}{unit}")

def check_price_ranges():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–∏–∞–ø–∞–∑–æ–Ω—ã —Ü–µ–Ω"""
    print("\n=== –î–ò–ê–ü–ê–ó–û–ù–´ –¶–ï–ù ===")
    
    from django.db.models import Min, Max, Avg
    
    price_stats = Product.objects.aggregate(
        min_price=Min('price'),
        max_price=Max('price'),
        avg_price=Avg('price')
    )
    
    print(f"–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: {price_stats['min_price']}‚ÇΩ")
    print(f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: {price_stats['max_price']}‚ÇΩ")
    print(f"–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞: {price_stats['avg_price']:.2f}‚ÇΩ")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä—ã –≤ —Ä–∞–∑–Ω—ã—Ö —Ü–µ–Ω–æ–≤—ã—Ö –¥–∏–∞–ø–∞–∑–æ–Ω–∞—Ö
    ranges = [
        (0, 10000, "–î–æ 10,000‚ÇΩ"),
        (10000, 50000, "10,000-50,000‚ÇΩ"),
        (50000, 100000, "50,000-100,000‚ÇΩ"),
        (100000, 200000, "100,000-200,000‚ÇΩ"),
        (200000, float('inf'), "–°–≤—ã—à–µ 200,000‚ÇΩ")
    ]
    
    for min_price, max_price, label in ranges:
        if max_price == float('inf'):
            count = Product.objects.filter(price__gte=min_price).count()
        else:
            count = Product.objects.filter(price__gte=min_price, price__lt=max_price).count()
        print(f"{label}: {count} —Ç–æ–≤–∞—Ä–æ–≤")

def main():
    print("üîç –ü–†–û–í–ï–†–ö–ê –ó–ê–ì–†–£–ñ–ï–ù–ù–´–• –¢–û–í–ê–†–û–í")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    total_products, total_categories, total_characteristics = check_database_stats()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–µ—Ä–∞—Ä—Ö–∏—é –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    check_categories_hierarchy()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–≤–∞—Ä—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    check_products_by_category()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ—Ç–∞–ª–∏ —Ç–æ–≤–∞—Ä–æ–≤
    check_product_details()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω—ã —Ü–µ–Ω
    check_price_ranges()
    
    print("\n" + "=" * 50)
    if total_products >= 500:
        print("‚úÖ –£–°–ü–ï–•: –°–æ–∑–¥–∞–Ω–æ 500+ —Ç–æ–≤–∞—Ä–æ–≤!")
    else:
        print(f"‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –°–æ–∑–¥–∞–Ω–æ —Ç–æ–ª—å–∫–æ {total_products} —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ 500")
    
    print(f"üìä –ò—Ç–æ–≥–æ: {total_products} —Ç–æ–≤–∞—Ä–æ–≤, {total_categories} –∫–∞—Ç–µ–≥–æ—Ä–∏–π, {total_characteristics} —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫")

if __name__ == "__main__":
    main()
